version: '3.8'

services:
  api:
    image: ${CI_REGISTRY_IMAGE}:prod
    container_name: project-api-production
    restart: unless-stopped
    ports:
      - "${PROD_PORT}:${PROD_PORT}"
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${PROD_DB_USER}:${PROD_DB_PASSWORD}@db:5432/${PROD_DB_NAME}
      JWT_SECRET: ${PROD_JWT_SECRET}
      PORT: ${PROD_PORT}
      API_URL: ${PROD_API_URL}
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.api-prod.loadbalancer.server.port=${PROD_PORT}"
      - "traefik.http.routers.api-prod.rule=Host(`api.mineria.ovh`)"
      - "traefik.http.routers.api-prod.entrypoints=websecure"
      - "traefik.http.routers.api-prod.tls=true"
      - "traefik.http.routers.api-prod.tls.certresolver=myresolver"
      - "traefik.http.routers.api-prod.service=api-prod"
      - "traefik.docker.network=gitlab-network"
    networks:
      - gitlab-network
    command: >
      sh -c "echo $DATABASE_URL && npx prisma migrate deploy && yarn start"

  db:
    image: postgres:15
    container_name: project-db-production
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${PROD_DB_USER}
      POSTGRES_PASSWORD: ${PROD_DB_PASSWORD}
      POSTGRES_DB: ${PROD_DB_NAME}
    volumes:
      - project-db-production-data:/var/lib/postgresql/data
    ports:
      - "${PROD_DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PROD_DB_USER} -d ${PROD_DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - gitlab-network

volumes:
  project-db-production-data:

networks:
  gitlab-network:
    external: true
    name: gitlab-network
