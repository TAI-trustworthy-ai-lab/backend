// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  name           String   @unique
  email          String   @unique
  hashedPassword String
  role           UserRole @default(USER)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  responses Response[]
}

enum UserRole {
  USER
  MODO
  ADMIN
}

enum TAIIndicator {
  ACCURACY
  RELIABILITY
  SAFETY
  RESILIENCE
  TRANSPARENCY
  ACCOUNTABILITY
  EXPLAINABILITY
  AUTONOMY
  PRIVACY
  FAIRNESS
  SECURITY
}

model Questionnaire {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  createdAt   DateTime @default(now())

  questions Question[]
  responses Response[]
}

model Question {
  id              Int           @id @default(autoincrement())
  questionnaireId Int
  text            String // content of question
  category        TAIIndicator //  accuracy, fairness ...
  order           Int // sequend of question
  questionnaire   Questionnaire @relation(fields: [questionnaireId], references: [id])
  answers         Answer[]
}

model Response {
  id              Int      @id @default(autoincrement())
  userId          Int
  questionnaireId Int
  submittedAt     DateTime @default(now())

  user          User          @relation(fields: [userId], references: [id])
  questionnaire Questionnaire @relation(fields: [questionnaireId], references: [id])
  answers       Answer[]
  report        Report?
}

model Answer {
  id         Int      @id @default(autoincrement())
  responseId Int
  questionId Int
  value      Int // Likert scale (1~5)
  response   Response @relation(fields: [responseId], references: [id])
  question   Question @relation(fields: [questionId], references: [id])
}

model Report {
  id           Int      @id @default(autoincrement())
  responseId   Int      @unique
  overallScore Float
  generatedAt  DateTime @default(now())
  analysisText String? // LLM analysisText
  radarData    Json // store 11 TAI score

  response Response @relation(fields: [responseId], references: [id])
}
